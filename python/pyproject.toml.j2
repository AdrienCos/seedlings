[build-system]
requires = ["setuptools>=68", "setuptools_scm[toml]>=7.1", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "{{ package_name }}"
authors = [{ name = "{{ author_name }}", email = "{{ author_email }}" }]
description = "{{ short_description }}"
readme = "README.md"
requires-python = ">=3.8"
license = { file = "LICENSE.txt" }
keywords = []

classifiers = [
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: Other/Proprietary License",
]
dependencies = ["Click >= 8", "loguru >= 0.7"]
dynamic = ["version"]

[project.optional-dependencies]
lint = ["black", "isort", "mypy", "ruff"]
test = ["coverage", "pytest", "tox"]
build = ["build"]
update = ["cruft", "toml", "pip-tools"]
dev = [
    "rope",
    "{{ package_name }}[build]",
    "{{ package_name }}[lint]",
    "{{ package_name }}[test]",
    "{{ package_name }}[update]",
]

[project.urls]
Homepage = "https://github.com/{{ author_username }}/{{ package_name }}"
Documentation = "https://github.com/{{ author_username }}/{{ package_name }}/wiki"
Repository = "https://github.com/{{ author_username }}/{{ package_name }}"
Issues = "https://github.com/{{ author_username }}/{{ package_name }}/issues"

[project.scripts]
{{ package_name }} = "{{ package_name }}.cli:main"

[tool.setuptools_scm]
fallback_version = "0.0.1"

[tool.mypy]
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_untyped_calls = true
ignore_missing_imports = false

[tool.isort]
profile = "black"

[tool.coverage.run]
branch = true
source = ["{{ package_name }}"]
parallel = true

[tool.coverage.paths]
source = ["src/", ".tox/**/site-packages"]

[tool.ruff]
select = [
    "ERA",   # eradicate
    "ASYNC", # flake8-async
    "S",     # flake8-bandit
    "B",     # flake8-bugbear
    "A",     # flake8-builtins
    "C4",    # flake8-comprehensions
    "DTZ",   # flake8-datetimez
    "RET",   # flake8-return
    "PTH",   # flake8-use-pathlib
    "FLY",   # flynt
    "I",     # isort
    "E",     # pycodestyle
    "D",     # pydocstyle
    "UP",    # pyupgrqde
    "F",     # pyflakes
    "RUF",   # ruff
    "TRY",   # tryceratops
]
[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.isort]
known-first-party = ["{{ package_name }}"]
